class t{constructor(t,e,s,a,n,i,r=null,o=null){this.id=t,this.parentId=e,this.name=s,this.progress=a>100?100:a<0?0:a,this.datePlannedStart=n,this.datePlannedEnd=i,this.dateActualStart=r,this.dateActualEnd=o}}class e{constructor(t,e,s,a,n,i=null,r=null,o=0,d=null){this.durationPlanned=0,this.durationActual=0,this._progress=0,this.externalId=t,this.name=e,this.progress=s,this.datePlannedStart=a,this.datePlannedEnd=n,this.dateActualStart=i,this.dateActualEnd=r,this.nestingLvl=o,this.parentUuid=d,this.refreshDuration(),this.uuid=crypto.getRandomValues(new Uint32Array(4)).join("-")}set progress(t){this._progress=t<0?0:t>100?100:t}get progress(){return this._progress}static initTasksFromModels(t){const s=t.slice(),a=[];let n=[];for(let t=s.length-1;t>=0;t--){const i=s[t];if(null===i.parentId){const r=new e(i.id,i.name,i.progress,i.datePlannedStart,i.datePlannedEnd,i.dateActualStart,i.dateActualEnd);a.push(r),n.push(r),s.splice(t,1)}}let i=1;for(;0!==s.length||0!==n.length;){const t=[];n.forEach(n=>{for(let r=s.length-1;r>=0;r--){const o=s[r];if(o.parentId===n.externalId){const d=new e(o.id,o.name,o.progress,o.datePlannedStart,o.datePlannedEnd,o.dateActualStart,o.dateActualEnd,i,n.uuid);a.push(d),t.push(d),s.splice(r,1)}}}),n=t,i++}return a}refreshDuration(){this.durationPlanned=this.datePlannedEnd.getTime()-this.datePlannedStart.getTime(),this.dateActualStart&&this.dateActualEnd?this.durationActual=this.dateActualEnd.getTime()-this.dateActualStart.getTime():this.durationActual=0}}class s{constructor(t=null){this.headerHeight=60,this.rowHeight=0,this.columnWidth=0,this.scale="day",this.locale="en",this.customDateFormat="YYYY-MM-DD",this.allowMoveBars=!0,this.allowResizeBars=!0,this.allowMoveProgress=!0,this.barHeaderGetter=t=>t.name,this.tooltipHeaderGetter=t=>t.name,this.tooltipPlannedPeriodGetter=t=>`${t.datePlannedStart}-${t.datePlannedEnd}`,this.tooltipActualPeriodGetter=t=>`${t.dateActualStart}-${t.dateActualEnd}`,this.tooltipPlannedDurationGetter=t=>t.durationPlanned,this.tooltipActualDurationGetter=t=>t.durationActual,this.tooltipProgressGetter=t=>t.progress,null!=t&&Object.assign(this,t)}}class a{constructor(t,e){if(this._tasks=[],this._isSeparatorDragActive=!1,this.onMouseDownOnSep=t=>{t.target===this._separator&&(this._isSeparatorDragActive=!0)},this.onMouseMoveOnSep=t=>{if(!this._isSeparatorDragActive)return!1;const e=this._wrapper.offsetLeft,s=t.clientX-e;this._table.style.width=Math.max(a.GRID_MIN_WIDTH,s)+"px",this._table.style.flexGrow="0"},this.onMouseUpOnSep=t=>{this._isSeparatorDragActive=!1},this._container=document.querySelector(t),!this._container)throw new Error("Container is null");this.createLayout(),this._options=new s(e)}destroy(){document.removeEventListener("mousedown",this.onMouseDownOnSep),document.removeEventListener("mousemove",this.onMouseMoveOnSep),document.removeEventListener("mouseup",this.onMouseUpOnSep)}createLayout(){const t=document.createElement("div");t.classList.add(a.WRAPPER_CLASS);const e=document.createElement("table");e.classList.add(a.GRID_CLASS);const s=document.createElementNS("http://www.w3.org/2000/svg","svg");s.classList.add(a.SVG_CLASS);const n=document.createElement("div");n.classList.add(a.SEPARATOR_CLASS),t.appendChild(e),t.appendChild(n),t.appendChild(s),this._container.appendChild(t),this._wrapper=t,this._table=e,this._chartSvg=s,this._separator=n,document.addEventListener("mousedown",this.onMouseDownOnSep),document.addEventListener("mousemove",this.onMouseMoveOnSep),document.addEventListener("mouseup",this.onMouseUpOnSep)}clearTasks(){this._tasks.length=0}pushTasks(t){this._tasks.push(...t)}}a.WRAPPER_CLASS="ts-gantt-wrapper",a.GRID_CLASS="ts-gantt-grid",a.SVG_CLASS="ts-gantt-svg",a.SEPARATOR_CLASS="ts-gantt-separator",a.GRID_MIN_WIDTH=100;export{a as TsGantt,s as TsGanttOptions,e as TsGanttTask,t as TsGanttTaskModel};
