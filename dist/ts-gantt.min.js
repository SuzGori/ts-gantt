class t{constructor(t,e,s,a,n,i,r=null,d=null){this.id=t,this.parentId=e,this.name=s,this.progress=a>100?100:a<0?0:a,this.datePlannedStart=n,this.datePlannedEnd=i,this.dateActualStart=r,this.dateActualEnd=d}}class e{constructor(t,e,s,a,n,i,r=null,d=null,l=0,o=null,h=null){this.durationPlanned=0,this.durationActual=0,this._progress=0,this.externalId=t,this.parentExternalId=e,this.name=s,this.progress=a,this.datePlannedStart=n,this.datePlannedEnd=i,this.dateActualStart=r,this.dateActualEnd=d,this.nestingLvl=l,this.parentUuid=o,this.uuid=h||crypto.getRandomValues(new Uint32Array(4)).join("-"),this.refreshDuration()}set progress(t){this._progress=t<0?0:t>100?100:t}get progress(){return this._progress}static convertModelsToTasks(t,s=new Map){const a=t.slice(),n=[];let i=[];for(let t=a.length-1;t>=0;t--){const r=a[t];if(null===r.parentId){const d=new e(r.id,r.parentId,r.name,r.progress,r.datePlannedStart,r.datePlannedEnd,r.dateActualStart,r.dateActualEnd,0,null,s.get(r.id));n.push(d),i.push(d),a.splice(t,1)}}let r=1;for(;0!==a.length||0!==i.length;){const t=[];i.forEach(i=>{for(let d=a.length-1;d>=0;d--){const l=a[d];if(l.parentId===i.externalId){const o=new e(l.id,l.parentId,l.name,l.progress,l.datePlannedStart,l.datePlannedEnd,l.dateActualStart,l.dateActualEnd,r,i.uuid,s.get(l.id));n.push(o),t.push(o),a.splice(d,1)}}}),i=t,r++}return n}static convertTasksToModels(e){return e.map(e=>new t(e.externalId,e.parentExternalId,e.name,e.progress,e.datePlannedStart,e.datePlannedEnd,e.dateActualStart,e.dateActualEnd))}static detectTaskChanges(t){const{oldTasks:e,newTasks:s}=t,a=e.map(t=>t.uuid),n=s.map(t=>t.uuid),i=e.filter(t=>!n.includes(t.uuid)),r=[],d=[],l=[];for(const t of s){if(!a.includes(t.uuid)){r.push(t);continue}const s=e.find(e=>e.uuid===t.uuid);t.equals(s)&&l.push(t),d.push(t)}return{deleted:i,added:r,changed:d,unchanged:l}}static getTasksIdsMap(t){const e=new Map;for(const s of t)e.has(s.externalId)||e.set(s.externalId,s.uuid);return e}refreshDuration(){this.durationPlanned=this.datePlannedEnd.getTime()-this.datePlannedStart.getTime(),this.dateActualStart&&this.dateActualEnd?this.durationActual=this.dateActualEnd.getTime()-this.dateActualStart.getTime():this.durationActual=0}equals(t){return this.uuid===t.uuid&&this.parentUuid===t.parentUuid&&this.nestingLvl===t.nestingLvl&&this.name===t.name&&this.datePlannedStart===t.datePlannedStart&&this.datePlannedEnd===t.datePlannedEnd&&this.dateActualStart===t.dateActualStart&&this.dateActualEnd===t.dateActualEnd}}class s{}class a{}class n{constructor(t=null){this.headerHeight=60,this.rowHeight=0,this.columnWidth=0,this.scale="day",this.locale="en",this.customDateFormat="YYYY-MM-DD",this.allowMoveBars=!0,this.allowResizeBars=!0,this.allowMoveProgress=!0,this.barHeaderGetter=t=>t.name,this.tooltipHeaderGetter=t=>t.name,this.tooltipPlannedPeriodGetter=t=>`${t.datePlannedStart}-${t.datePlannedEnd}`,this.tooltipActualPeriodGetter=t=>`${t.dateActualStart}-${t.dateActualEnd}`,this.tooltipPlannedDurationGetter=t=>t.durationPlanned,this.tooltipActualDurationGetter=t=>t.durationActual,this.tooltipProgressGetter=t=>t.progress,null!=t&&Object.assign(this,t)}}class i{constructor(t){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.classList.add(...t),this._htmlSvg=e}get htmlSvg(){return this._htmlSvg}}class r{constructor(t,e){const s=document.createElement("table");s.classList.add(...t),this._htmlTable=s,this._minWidth=e}get htmlTable(){return this._htmlTable}setWidth(t){this._htmlTable.style.width=Math.max(this._minWidth,t)+"px",this._htmlTable.style.flexGrow="0"}}class d{constructor(t,e){if(this._tasks=[],this._htmlSeparatorDragActive=!1,this.onMouseDownOnSep=t=>{t.target===this._htmlSeparator&&(this._htmlSeparatorDragActive=!0)},this.onMouseMoveOnSep=t=>{if(!this._htmlSeparatorDragActive)return!1;const e=this._htmlWrapper.offsetLeft,s=t.clientX-e;this._table.setWidth(s)},this.onMouseUpOnSep=t=>{this._htmlSeparatorDragActive=!1},this._htmlContainer=document.querySelector(t),!this._htmlContainer)throw new Error("Container is null");this.createLayout(),this._options=new n(e)}get tasks(){return e.convertTasksToModels(this._tasks)}set tasks(t){const s=this.updateTasks(t),a=e.detectTaskChanges(s);this.updateRows(a)}destroy(){document.removeEventListener("mousedown",this.onMouseDownOnSep),document.removeEventListener("mousemove",this.onMouseMoveOnSep),document.removeEventListener("mouseup",this.onMouseUpOnSep)}createLayout(){const t=document.createElement("div");t.classList.add(d.WRAPPER_CLASS);const e=document.createElement("div");e.classList.add(d.SEPARATOR_CLASS),this._table=new r([d.TABLE_CLASS],d.TABLE_MIN_WIDTH),this._chart=new i([d.CHART_CLASS]),t.appendChild(this._table.htmlTable),t.appendChild(e),t.appendChild(this._chart.htmlSvg),this._htmlContainer.appendChild(t),this._htmlWrapper=t,this._htmlSeparator=e,document.addEventListener("mousedown",this.onMouseDownOnSep),document.addEventListener("mousemove",this.onMouseMoveOnSep),document.addEventListener("mouseup",this.onMouseUpOnSep)}updateTasks(t){const s=this._tasks,a=e.getTasksIdsMap(s),n=e.convertModelsToTasks(t,a);return this._tasks=n,{oldTasks:s,newTasks:n}}updateRows(t){}}d.WRAPPER_CLASS="ts-gantt-wrapper",d.TABLE_CLASS="ts-gantt-grid",d.CHART_CLASS="ts-gantt-chart",d.SEPARATOR_CLASS="ts-gantt-separator",d.TABLE_MIN_WIDTH=100;export{d as TsGantt,i as TsGanttChart,n as TsGanttOptions,r as TsGanttTable,e as TsGanttTask,a as TsGanttTaskChangesDetectionResult,t as TsGanttTaskModel,s as TsGanttTaskUpdateResult};
